#!/bin/bash

# ==============================================================================
# SNORT IDS/IPS Automated Setup Script
# Version: 1.0
#
# This script automates the installation and configuration of Snort 3 as an IDS
# (Intrusion Detection System) and IPS (Intrusion Prevention System) on Debian/
# Ubuntu-based systems. It's designed to be robust, user-friendly, and highly
# commented for educational purposes and easy maintenance.
#
# Features:
# - Checks for root privileges.
# - Prompts for user input (network interface, HOME_NET).
# - Installs Snort and its dependencies from source.
# - Configures snort.lua for IDS and IPS (inline mode).
# - Sets up a systemd service to run Snort on boot using snortd.
# - Color-coded output for readability.
# - Includes basic error handling.
#
# Disclaimer: This script is for educational and defensive purposes only.
#             Always test in a controlled environment before deploying.
# ==============================================================================

# --- Configuration Variables ---
# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

SNORT_VERSION="3.1.75.0" # You can update this to the latest version
SNORT_CONF_PATH="/usr/local/etc/snort/snort.lua"
RULES_PATH="/usr/local/etc/rules"
LOCAL_RULES_FILE="${RULES_PATH}/local.rules"
SYSTEMD_SERVICE_FILE="/etc/systemd/system/snort.service"
SNORT_USER="snort"
SNORT_GROUP="snort"

# --- Functions ---

# Check for root privileges
check_root() {
    if [[ $EUID -ne 0 ]]; then
        echo -e "${RED}[-] Error:${NC} This script must be run as root."
        exit 1
    fi
}

# Display a banner
show_banner() {
    echo -e "${CYAN}"
    echo "================================================="
    echo "       Snort Automated IDS/IPS Setup"
    echo "================================================="
    echo -e "${NC}"
}

# Prompt user for network configuration
get_user_input() {
    echo -e "${YELLOW}[?]${NC} Let's configure Snort for your network."
    read -rp "Enter your primary network interface (e.g., eth0, ens33): " IFACE
    read -rp "Enter your HOME_NET CIDR (e.g., 192.168.1.0/24): " HOME_NET
    echo ""
}

# Installation function
install_snort() {
    echo -e "${CYAN}[*] Starting Snort installation...${NC}"

    # Update and install dependencies
    echo -e "${YELLOW}[*] Updating package list and installing dependencies...${NC}"
    apt-get update -y
    apt-get install -y build-essential libpcap-dev libpcre3-dev libnet1-dev zlib1g-dev luajit hwloc libdnet-dev libdumbnet-dev bison flex liblzma-dev openssl libssl-dev pkg-config cmake git wget

    # Create snort user and group
    echo -e "${YELLOW}[*] Creating Snort user and group...${NC}"
    groupadd snort || true
    useradd -r -s /usr/sbin/nologin -c "Snort User" -g snort snort || true

    # Download and install Snort DAQ (Data Acquisition library) from source
    echo -e "${YELLOW}[*] Installing DAQ library...${NC}"
    git clone https://github.com/snort3/libdaq.git
    cd libdaq
    ./bootstrap
    ./configure
    make
    make install
    cd ..
    
    # Download and install Snort 3 from source
    echo -e "${YELLOW}[*] Installing Snort 3 from source...${NC}"
    wget https://github.com/snort3/snort3/archive/refs/tags/${SNORT_VERSION}.tar.gz -O snort3.tar.gz
    tar -xvzf snort3.tar.gz
    cd "snort3-${SNORT_VERSION}"
    ./configure_cmake.sh --prefix=/usr/local --enable-tcmalloc
    cd build
    make
    make install
    ldconfig
    
    # Clean up installation files
    cd ../..
    rm -rf snort3.tar.gz "snort3-${SNORT_VERSION}" libdaq

    echo -e "${GREEN}[+] Snort installation complete.${NC}"
}

# Configuration function
configure_snort() {
    echo -e "${CYAN}[*] Configuring Snort...${NC}"
    
    # Create necessary directories
    mkdir -p /usr/local/etc/snort
    mkdir -p /usr/local/etc/rules
    mkdir -p /var/log/snort
    mkdir -p /var/log/snort/archived_logs
    
    # Create a basic snort.lua configuration file
    cat <<EOF > ${SNORT_CONF_PATH}
--
-- Snort 3 Configuration File
--
-- This is a minimal configuration generated by a script.
-- For a full configuration, refer to the official snort.lua.
--

-- Configure local networks
variables = {
    HOME_NET = '${HOME_NET}',
    EXTERNAL_NET = '!$HOME_NET'
}

-- Enable IDS mode
-- This is the default passive mode, it will only generate alerts.
-- To run in this mode, use the command: snort -c /usr/local/etc/snort/snort.lua -i ${IFACE} -A alert_full
ips = {
    -- To enable IPS (inline) mode, uncomment the two lines below
    -- and make sure your DAQ is set to afpacket.
    -- daq = { mode = 'inline' },
    -- mode = 'ips'
}

-- Configure output logging
-- This will log alerts in a unified2 format, which can be processed by other tools.
-- To process these logs, you'll need a tool like Barnyard2.
-- Refer to Snort documentation for other output options.
outputs = {
    {
        name = 'alert_unified2',
        options = {
            filename = 'snort.log',
            limit = 1024,
            split = 1
        }
    }
}

-- Include Snort rules
-- This section loads the rules that Snort will use to detect threats.
-- The local.rules file is for custom rules you create.
include('${RULES_PATH}/snort.community.rules')
include('${LOCAL_RULES_FILE}')

-- Ensure Snort can read the rules
rule_path = '${RULES_PATH}'
-- Set up a rule for testing
-- This rule will alert if anyone pings your HOME_NET from EXTERNAL_NET
-- alert icmp any any -> \$HOME_NET any (msg:"ICMP Ping Test"; sid:1000001; rev:1;)
--
--
EOF
    
    # Download community rules
    echo -e "${YELLOW}[*] Downloading Snort community rules...${NC}"
    wget -qO- https://www.snort.org/downloads/community/snort3-community-rules.tar.gz | tar xz -C ${RULES_PATH}/
    mv ${RULES_PATH}/snort3-community-rules.tar.gz ${RULES_PATH}/snort.community.rules
    
    # Create a local rules file for custom rules
    echo -e "${YELLOW}[*] Creating local.rules file for custom rules...${NC}"
    echo "# Place your custom rules here." > ${LOCAL_RULES_FILE}

    # Set proper permissions
    chown -R ${SNORT_USER}:${SNORT_GROUP} /var/log/snort
    chown -R ${SNORT_USER}:${SNORT_GROUP} /usr/local/etc/snort
    chown -R ${SNORT_USER}:${SNORT_GROUP} /usr/local/etc/rules
    
    echo -e "${GREEN}[+] Snort configuration complete.${NC}"
}

# Systemd service setup
setup_systemd_service() {
    echo -e "${CYAN}[*] Setting up Snort as a systemd service...${NC}"
    
    # Create the systemd service file
    cat <<EOF > ${SYSTEMD_SERVICE_FILE}
[Unit]
Description=Snort 3 Intrusion Detection System
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/snort -c ${SNORT_CONF_PATH} -i ${IFACE} -A full -q --daq-dir /usr/local/lib/snort_extra/ --daq afpacket --pid-path /var/run -D
Restart=always

[Install]
WantedBy=multi-user.target
EOF

    # Reload systemd and enable the service
    echo -e "${YELLOW}[*] Reloading systemd daemon and enabling service...${NC}"
    systemctl daemon-reload
    systemctl enable snort.service
    
    echo -e "${GREEN}[+] Snort systemd service configured.${NC}"
    echo -e "${GREEN}[+] Snort is now configured to start on boot.${NC}"
    echo -e "${YELLOW}[*] You can start Snort manually with:${NC} sudo systemctl start snort"
    echo -e "${YELLOW}[*] Check its status with:${NC} sudo systemctl status snort"
}

# Main script logic
main() {
    show_banner
    check_root
    get_user_input
    
    install_snort
    configure_snort
    setup_systemd_service

    echo -e "${GREEN}"
    echo "================================================="
    echo "       Snort Setup Complete!"
    echo "================================================="
    echo -e "You are now running Snort as an IDS in passive mode."
    echo "This is the safest way to get started. You can check the logs"
    echo "in /var/log/snort for alerts."
    echo ""
    echo "To switch to IPS mode, you will need to carefully edit the"
    echo "snort.lua file and your firewall rules. I have added comments"
    echo "in the file to guide you."
    echo -e "${NC}"
}

# Execute the main function
main

